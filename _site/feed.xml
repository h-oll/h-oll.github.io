<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.3">Jekyll</generator><link href="https://h-oll.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://h-oll.github.io/" rel="alternate" type="text/html" /><updated>2023-04-17T07:36:23+02:00</updated><id>https://h-oll.github.io/feed.xml</id><title type="html">Harold Ollivier</title><subtitle>Quantum Algorithms, Architectures, Applications and their Theory Team | QuantumTech@INRIA</subtitle><entry><title type="html">Limitations of variational quantum algorithms: a quantum optimal transport approach</title><link href="https://h-oll.github.io/2023/04/17/concentration.html" rel="alternate" type="text/html" title="Limitations of variational quantum algorithms: a quantum optimal transport approach" /><published>2023-04-17T00:00:00+02:00</published><updated>2023-04-17T00:00:00+02:00</updated><id>https://h-oll.github.io/2023/04/17/concentration</id><content type="html" xml:base="https://h-oll.github.io/2023/04/17/concentration.html">&lt;style&gt;
  #content { max-width: 60em; margin: auto; }
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #e6e6e6;
    border-radius: 3px;
    background-color: #f2f2f2;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: auto;
  }
  pre.src:before {
    display: none;
    position: absolute;
    top: -8px;
    right: 12px;
    padding: 3px;
    color: #555;
    background-color: #f2f2f299;
  }
  pre.src:hover:before { display: inline; margin-top: 14px;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-authinfo::before { content: 'Authinfo'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per &quot;defun org-babel-execute&quot;
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf &quot; &quot;)) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .equation-container {
    display: table;
    text-align: center;
    width: 100%;
  }
  .equation {
    vertical-align: middle;
  }
  .equation-label {
    display: table-cell;
    text-align: right;
    vertical-align: middle;
  }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { }
&lt;/style&gt;

&lt;script type=&quot;text/x-mathjax-config&quot;&gt;
    MathJax.Hub.Config({
        displayAlign: &quot;center&quot;,
        displayIndent: &quot;0em&quot;,

        &quot;HTML-CSS&quot;: { scale: 100,
                        linebreaks: { automatic: &quot;false&quot; },
                        webFont: &quot;TeX&quot;
                       },
        SVG: {scale: 100,
              linebreaks: { automatic: &quot;false&quot; },
              font: &quot;TeX&quot;},
        NativeMML: {scale: 100},
        TeX: { equationNumbers: {autoNumber: &quot;AMS&quot;},
               MultLineWidth: &quot;85%&quot;,
               TagSide: &quot;right&quot;,
               TagIndent: &quot;.8em&quot;
             }
});
&lt;/script&gt;

&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS_HTML&quot;&gt;&lt;/script&gt;

&lt;h1 id=&quot;sec:orgb97357a&quot;&gt;Definitions&lt;/h1&gt;
&lt;div class=&quot;definition&quot;&gt;
&lt;p&gt;&lt;strong&gt;Definition 1&lt;/strong&gt;. &lt;em&gt;The Lipschitz constant for &lt;span class=&quot;math inline&quot;&gt;\(H\)&lt;/span&gt; a self-adjoint operator is defined by:
&lt;span class=&quot;math display&quot;&gt;\[\|H\|_L = 2 \max_{v\in V}
\min_{H_{\setminus v}} \|H - H_{\setminus v}\otimes
\mathbb{I}_v\|_{\infty}\]&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;definition&quot;&gt;
&lt;p&gt;&lt;strong&gt;Definition 2&lt;/strong&gt;. &lt;em&gt;The sandwiched Renyi divergence of
order &lt;span class=&quot;math inline&quot;&gt;\(\alpha \in (1,+\infty)\)&lt;/span&gt; is
defined for two quantum states &lt;span class=&quot;math inline&quot;&gt;\(\rho,
\sigma\)&lt;/span&gt; with &lt;span class=&quot;math inline&quot;&gt;\(\mathop{\mathrm{supp}}\rho \subset
\mathop{\mathrm{supp}}\sigma\)&lt;/span&gt; as &lt;span class=&quot;math display&quot;&gt;\[D_{\alpha} (\rho \| \sigma) = \frac{1}{\alpha-1}
\log \mathop{\mathrm{tr}}\left[\left(\sigma^{\frac{1-\alpha}{2\alpha}}
\rho \sigma^{\frac{1-\alpha}{2\alpha}}\right
)^\alpha\right]\]&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;definition&quot;&gt;
&lt;p&gt;&lt;strong&gt;Definition 3&lt;/strong&gt;. &lt;em&gt;A state &lt;span class=&quot;math inline&quot;&gt;\(\sigma\)&lt;/span&gt; on &lt;span class=&quot;math inline&quot;&gt;\(V\)&lt;/span&gt; qudits satisfies a Gaussian
concentration inequality of parameter &lt;span class=&quot;math inline&quot;&gt;\(c\)&lt;/span&gt; if there is a constant &lt;span class=&quot;math inline&quot;&gt;\(K\)&lt;/span&gt; such that for any &lt;span class=&quot;math inline&quot;&gt;\(a\)&lt;/span&gt; and any observable &lt;span class=&quot;math inline&quot;&gt;\(O\)&lt;/span&gt;: &lt;span class=&quot;math display&quot;&gt;\[\Pr_{\sigma} (|O - \langle O\rangle_\sigma
\mathbb{I}| &amp;gt; a |V|) \leq K \exp \left( - \frac{c a^2 |V|}{\|
\sigma^{-1/2} O \sigma^{1/2}\|_L^2}\right)\]&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Above &lt;span class=&quot;math inline&quot;&gt;\(|A| = \sqrt {A^\dagger A}\)&lt;/span&gt;.
Note that in the cases where &lt;span class=&quot;math inline&quot;&gt;\(\sigma\)&lt;/span&gt;
and &lt;span class=&quot;math inline&quot;&gt;\(O\)&lt;/span&gt; commute &lt;span class=&quot;math inline&quot;&gt;\(\| \sigma^{-1/2} O \sigma^{1/2}\|_L^2\)&lt;/span&gt;
reduces to &lt;span class=&quot;math inline&quot;&gt;\(\| O\|_L^2\)&lt;/span&gt;.&lt;/p&gt;
&lt;h1 id=&quot;sec:orgcdccd7e&quot;&gt;Transferring inequalities&lt;/h1&gt;
&lt;div class=&quot;theorem&quot;&gt;
&lt;p&gt;&lt;strong&gt;Theorem 1&lt;/strong&gt;. &lt;em&gt;Let &lt;span class=&quot;math inline&quot;&gt;\(\rho,
\sigma\)&lt;/span&gt; be two quantum states on &lt;span class=&quot;math inline&quot;&gt;\(\mathcal H_V\)&lt;/span&gt;. Then for any POVM element
&lt;span class=&quot;math inline&quot;&gt;\(0 \leq E \leq \mathbb{I}\)&lt;/span&gt; and &lt;span class=&quot;math inline&quot;&gt;\(\alpha &amp;gt;1\)&lt;/span&gt;, &lt;span class=&quot;math display&quot;&gt;\[\mathop{\mathrm{tr}}[E\rho] \leq \exp\left(
\frac{\alpha -1}{\alpha} (D_\alpha(\rho\|\sigma) +
\log(\mathop{\mathrm{tr}}[E\sigma]))\right)\]&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;proof&quot;&gt;
&lt;p&gt;&lt;em&gt;Proof.&lt;/em&gt; Using the circularity of the trace we have: &lt;span class=&quot;math display&quot;&gt;\[\begin{aligned}
\mathop{\mathrm{tr}}[E\rho]
&amp;amp; = \mathop{\mathrm{tr}}[\sigma^{-\frac{1-\alpha}{2\alpha}} E
\sigma^{-\frac{1-\alpha}{2\alpha}} \times
\sigma^{\frac{1-\alpha}{2\alpha}}
\rho  \sigma^{\frac{1-\alpha}{2\alpha}}] \\
&amp;amp; \leq \mathop{\mathrm{tr}}\left[ \left(
\sigma^{-\frac{1-\alpha}{2\alpha}} E
\sigma^{-\frac{1-\alpha}{2\alpha}}\right)^\beta \right
]^{\frac{1}{\beta}} \times \mathop{\mathrm{tr}}\left[ \left(
\sigma^{\frac{1-\alpha}{2\alpha}}
\rho  \sigma^{\frac{1-\alpha}{2\alpha}} \right)^\alpha \right
]^{\frac{1}{\alpha}}\end{aligned}\]&lt;/span&gt; where the last line is
obtained by applying Hölder inequality, which holds for &lt;span class=&quot;math inline&quot;&gt;\(\frac{1}{\alpha} + \frac{1}{\beta} =
1\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Using the Araki-Lieb-Thirring inequality followed by &lt;span class=&quot;math inline&quot;&gt;\(E \leq \mathbb{I}\)&lt;/span&gt; we obtain: &lt;span class=&quot;math display&quot;&gt;\[\begin{aligned}
\mathop{\mathrm{tr}}\left( \sigma^{-\frac{1-\alpha}{2\alpha}} E
\sigma^{-\frac{1-\alpha}{2\alpha}}\right)^\beta
&amp;amp; \leq \mathop{\mathrm{tr}}\left(
\sigma^{-\frac{(1-\alpha)\beta}{2\alpha}} E^\beta
\sigma^{-\frac{(1-\alpha)\beta}{2\alpha}}\right) \\
&amp;amp; \leq \mathop{\mathrm{tr}}\left(
\sigma^{-\frac{(1-\alpha)\beta}{2\alpha}} E
\sigma^{-\frac{(1-\alpha)\beta}{2\alpha}}\right).\end{aligned}\]&lt;/span&gt;
As &lt;span class=&quot;math inline&quot;&gt;\(\beta = \frac{\alpha}{\alpha -1}\)&lt;/span&gt;
we have &lt;span class=&quot;math display&quot;&gt;\[\mathop{\mathrm{tr}}\left(
\sigma^{-\frac{(1-\alpha)\beta}{2\alpha}} E
\sigma^{-\frac{(1-\alpha)\beta}{2\alpha}}\right)=\mathop{\mathrm{tr}}(E\sigma).\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Additionally, note that &lt;span class=&quot;math display&quot;&gt;\[\mathop{\mathrm{tr}}\left[ \left(
\sigma^{\frac{1-\alpha}{2\alpha}}
\rho  \sigma^{\frac{1-\alpha}{2\alpha}} \right)^\alpha \right
]^{\frac{1}{\alpha}} = \exp (\frac{\alpha -1}{\alpha}
D_\alpha(\rho\|\sigma)).\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Combining the two gives: &lt;span class=&quot;math display&quot;&gt;\[\begin{aligned}
\mathop{\mathrm{tr}}[E\rho]
&amp;amp; \leq (tr[E\sigma]) \times \exp\left( \frac{\alpha -1}{\alpha}
(D_\alpha(\rho\|\sigma))\right) \\
&amp;amp; \leq \exp\left( \frac{\alpha -1}{\alpha}
(D_\alpha(\rho\|\sigma))  \log
(\mathop{\mathrm{tr}}[E\sigma])\right).\end{aligned}\]&lt;/span&gt; ◻&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Remark that the theorem bounds the probability of observing &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; on &lt;span class=&quot;math inline&quot;&gt;\(\rho\)&lt;/span&gt; based on the product of the
probability of observing &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; on &lt;span class=&quot;math inline&quot;&gt;\(\sigma\)&lt;/span&gt; times a quantity that depends on
&lt;span class=&quot;math inline&quot;&gt;\(D_\alpha(\rho\|\sigma)\)&lt;/span&gt;, which can
be seen as a measure of the distance between the two states &lt;span class=&quot;math inline&quot;&gt;\(\rho\)&lt;/span&gt; and &lt;span class=&quot;math inline&quot;&gt;\(\sigma\)&lt;/span&gt;. This will become interesting
whenever &lt;span class=&quot;math inline&quot;&gt;\(D_\alpha(\rho\|\sigma)\)&lt;/span&gt;
becomes small.&lt;/p&gt;
&lt;div class=&quot;corollary&quot;&gt;
&lt;p&gt;&lt;strong&gt;Corollary 1&lt;/strong&gt;. &lt;em&gt;If &lt;span class=&quot;math inline&quot;&gt;\(\sigma\)&lt;/span&gt; satisfies a Gaussian concentration
inequality &lt;span class=&quot;math display&quot;&gt;\[\Pr_{\sigma} (|O - \langle
O\rangle_\sigma \mathbb{I}| &amp;gt; a |V|) \leq K \exp \left( - \frac{c a^2
|V|}{\| \sigma^{-1/2} O \sigma^{1/2}\|_L^2}\right)\]&lt;/span&gt; for some
constant &lt;span class=&quot;math inline&quot;&gt;\(c, K &amp;gt; 0\)&lt;/span&gt;, then for any
&lt;span class=&quot;math inline&quot;&gt;\(\alpha &amp;gt; 1\)&lt;/span&gt;: &lt;span class=&quot;math display&quot;&gt;\[\Pr_{\rho} (|O - \langle O\rangle_\sigma
\mathbb{I}| &amp;gt; a |V|) \leq \exp  \left(\frac{\alpha
-1}{\alpha}\left(D_\alpha(\rho\|\sigma) - \frac{c a^2 |V|}{\|
\sigma^{-1/2} O \sigma^{1/2}\|_L^2} +
\log(K)\right)\right)\]&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;corollary&quot;&gt;
&lt;p&gt;&lt;strong&gt;Corollary 2&lt;/strong&gt;. &lt;em&gt;For an input state &lt;span class=&quot;math inline&quot;&gt;\(\rho\)&lt;/span&gt;, a noisy circuit evolution &lt;span class=&quot;math inline&quot;&gt;\(\mathcal{N}(\rho)\)&lt;/span&gt; and a state &lt;span class=&quot;math inline&quot;&gt;\(\sigma\)&lt;/span&gt; satisfying a Gaussian
concentration inequality, whenever there is a value of &lt;span class=&quot;math inline&quot;&gt;\(\alpha\)&lt;/span&gt; and &lt;span class=&quot;math inline&quot;&gt;\(a\)&lt;/span&gt; such that &lt;span class=&quot;math display&quot;&gt;\[\frac{D_{\alpha}(\mathcal N(\rho) \|
\sigma)}{|V|} &amp;lt; \frac{c a^2}{\| \sigma^{-1/2} O \sigma^{1/2}\|_L^2} -
\frac{\log(K)}{|V|},\]&lt;/span&gt; then the probability of observing an
outcome of &lt;span class=&quot;math inline&quot;&gt;\(O\)&lt;/span&gt; outside the interval
&lt;span class=&quot;math inline&quot;&gt;\(\langle O \rangle_{\sigma} \pm a|V|\)&lt;/span&gt;
decreases exponentially with &lt;span class=&quot;math inline&quot;&gt;\(|V|\)&lt;/span&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id=&quot;sec:org9a50fc6&quot;&gt;Bounding &lt;span class=&quot;math inline&quot;&gt;\(D_{\alpha}(\mathcal N(\rho) \|
\sigma)\)&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;Such bounds can be obtained for noisy circuits where each layer &lt;span class=&quot;math inline&quot;&gt;\(i\)&lt;/span&gt; is followed by a noisy channel &lt;span class=&quot;math inline&quot;&gt;\(\mathcal N\)&lt;/span&gt; with a fixed point &lt;span class=&quot;math inline&quot;&gt;\(\sigma\)&lt;/span&gt; satisfying a strong data
processing inequality: &lt;span class=&quot;math display&quot;&gt;\[D_\alpha(\mathcal
N(\rho) \| \sigma)\leq (1-q) D_\alpha (\rho \|\sigma), \ \forall
\rho.\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;In such cases we obtain&lt;/p&gt;
&lt;div class=&quot;lemma&quot;&gt;
&lt;p&gt;&lt;strong&gt;Lemma 1&lt;/strong&gt;. &lt;em&gt;Let &lt;span class=&quot;math inline&quot;&gt;\(\mathcal N\)&lt;/span&gt; be a quantum channel with a
unique fixed point &lt;span class=&quot;math inline&quot;&gt;\(\sigma\)&lt;/span&gt; and
satisfying a strong data processing inequality for some &lt;span class=&quot;math inline&quot;&gt;\(\alpha &amp;gt; 1\)&lt;/span&gt;, then for any other
channels &lt;span class=&quot;math inline&quot;&gt;\(\{\Phi_i\}_{i\leq l}\)&lt;/span&gt; we
have: &lt;span class=&quot;math display&quot;&gt;\[D_\alpha\left( \mathcal P (\rho) \|
\sigma \right) \leq (1-q)^l D_\alpha(\rho\|\sigma) + \sum_{i\leq l}
(1-q)^{l-i} D_\infty (\Phi_i(\sigma) \| \sigma)\]&lt;/span&gt; where &lt;span class=&quot;math inline&quot;&gt;\(D_\infty(\rho \| \sigma) = \log \|
\sigma^{-\frac{1}{2}} \rho \sigma^{-\frac{1}{2}}\|_\infty\)&lt;/span&gt;, and
&lt;span class=&quot;math inline&quot;&gt;\(\mathcal P = \prod_{i \leq l} \Phi_i \circ
\mathcal N\)&lt;/span&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;proof&quot;&gt;
&lt;p&gt;&lt;em&gt;Proof.&lt;/em&gt; We proceed by induction on &lt;span class=&quot;math inline&quot;&gt;\(l\)&lt;/span&gt;. For &lt;span class=&quot;math inline&quot;&gt;\(l=1\)&lt;/span&gt;, we use the data processed triangle
inequality: &lt;span class=&quot;math display&quot;&gt;\[D_\alpha(\Phi_1 \circ \mathcal
N  (\rho) \|\sigma) \leq D_\alpha(\mathcal N (\rho) \| \sigma) +
D_\infty (\Phi_1 (\sigma) \| \sigma) \leq (1-q) D_\alpha(\rho \| \sigma)
+ D_\infty (\Phi_1 (\sigma) \| \sigma).\]&lt;/span&gt; The induction is
performed in the same way, assuming the property holds for some &lt;span class=&quot;math inline&quot;&gt;\(l\)&lt;/span&gt; and then applying the data processed
triangle inequality. ◻&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Note that for unital channels &lt;span class=&quot;math inline&quot;&gt;\(\mathcal
N(\sigma) = \sigma\)&lt;/span&gt; as the fixed point of the channel is &lt;span class=&quot;math inline&quot;&gt;\(\mathbb{I}\)&lt;/span&gt;. This implies that &lt;span class=&quot;math inline&quot;&gt;\(D_\alpha\left(
\mathcal P (\rho) \| \sigma \right)\)&lt;/span&gt; will always converge to
0.&lt;/p&gt;
&lt;h1 id=&quot;sec:org3d74ce6&quot;&gt;Additional notes&lt;/h1&gt;
&lt;h1 id=&quot;sec:orgf48bec2&quot;&gt;Renyi entropies&lt;/h1&gt;
&lt;p&gt;In the above definition of Renyi divergence, note that when &lt;span class=&quot;math inline&quot;&gt;\(\alpha \rightarrow 1\)&lt;/span&gt; we recover the usual
relative entropy: &lt;span class=&quot;math display&quot;&gt;\[D_1 (\rho \| \sigma)
=  \mathop{\mathrm{tr}}(\rho (\log \rho - \log \sigma))\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;This is not a surprise as these sandwiched Renyi divergences have
been introduced as a generalization of the usual relative entropy. Renyi
entropies &lt;span class=&quot;math inline&quot;&gt;\(\frac{1}{1-\alpha} \log
\frac{\mathop{\mathrm{tr}}\rho^\alpha}{\mathop{\mathrm{tr}}\rho}\)&lt;/span&gt;
are also generalizations of von Neumann entropy in that they preserve
important properties:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;continuity&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;unitary invariance&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Normalization&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Additivity.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;sec:orgeedcd18&quot;&gt;Relative entropy and Pinsker inequality&lt;/h1&gt;
&lt;p&gt;The Pinsker inequality relates the relative entropy to the trace
distance. As such it allows to bound the trace distance using
information theoretic arguments: &lt;span class=&quot;math display&quot;&gt;\[D_1(\rho\|\sigma) \geq \frac{1}{2\log 2} \| \rho
-\sigma \|_{\mathop{\mathrm{tr}}}^2\]&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&quot;sec:orgc8d8ce5&quot;&gt;Hölder inequality&lt;/h1&gt;
&lt;p&gt;For &lt;span class=&quot;math inline&quot;&gt;\(A\)&lt;/span&gt;, &lt;span class=&quot;math inline&quot;&gt;\(B\)&lt;/span&gt; operators on &lt;span class=&quot;math inline&quot;&gt;\(\mathcal H\)&lt;/span&gt; &lt;span class=&quot;math display&quot;&gt;\[\|AB\|_1 \leq \|A\_p \|B\_q, \quad \frac{1}{p} +
\frac{1}{q} = 1\]&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&quot;sec:org7ac1d3f&quot;&gt;Araki-Lieb-Thirring inequality&lt;/h1&gt;
&lt;p&gt;For &lt;span class=&quot;math inline&quot;&gt;\(A,B \geq 0\)&lt;/span&gt;, &lt;span class=&quot;math inline&quot;&gt;\(q\geq 0\)&lt;/span&gt; and &lt;span class=&quot;math inline&quot;&gt;\(0\leq r \leq 1\)&lt;/span&gt; then &lt;span class=&quot;math display&quot;&gt;\[\mathop{\mathrm{tr}}(A^rB^rA^r)^q
\leq\mathop{\mathrm{tr}}(ABA)^{rq}.\]&lt;/span&gt; When &lt;span class=&quot;math inline&quot;&gt;\(r \geq 1\)&lt;/span&gt; the inequality is reversed.&lt;/p&gt;</content><author><name></name></author><category term="Qatalyze" /><summary type="html"></summary></entry></feed>